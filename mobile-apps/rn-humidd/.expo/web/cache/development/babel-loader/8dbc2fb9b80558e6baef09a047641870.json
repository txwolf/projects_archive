{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"./components/Image\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport Slider from '@react-native-community/slider';\nimport { useNavigation } from '@react-navigation/native';\nimport Text from \"./components/Text\";\nimport { useContext } from 'react';\nimport { CalcContext } from \"./helpers\";\nimport { cToF } from \"./helpers\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar RESULT_DESCRIPTION = {\n  0: {\n    title: \"too dry!\",\n    description: \"use humidifier\"\n  },\n  30: {\n    title: \"perfect humidity!\",\n    description: \"\"\n  },\n  60: {\n    title: \"too wet!\",\n    description: \"use air conditioner\"\n  }\n};\nexport default function Result() {\n  var navigation = useNavigation();\n\n  var _useContext = useContext(CalcContext),\n      humidityInside = _useContext.humidityInside,\n      weather = _useContext.weather,\n      locationName = _useContext.locationName,\n      scaleF = _useContext.scaleF;\n\n  var resultDescription;\n\n  if (humidityInside > 60) {\n    resultDescription = RESULT_DESCRIPTION[60];\n  } else if (humidityInside > 30) {\n    resultDescription = RESULT_DESCRIPTION[30];\n  } else {\n    resultDescription = RESULT_DESCRIPTION[0];\n  }\n\n  return _jsx(_Fragment, {\n    children: _jsxs(SafeAreaView, {\n      style: {\n        backgroundColor: 'white',\n        flex: 1\n      },\n      children: [_jsx(Image, {\n        resizeMode: \"contain\",\n        style: {\n          height: 50,\n          alignSelf: 'center',\n          marginTop: 20\n        },\n        source: require(\"../assets/logo_black.png\")\n      }), _jsx(View, {\n        children: _jsxs(Text, {\n          style: {\n            textAlign: 'center',\n            marginTop: 40,\n            fontSize: 16,\n            color: 'gray'\n          },\n          children: [locationName, '\\n', weather.weather[0].description, '\\n', \"temp outside:\", ' ', scaleF ? Math.round(cToF(Math.round((weather.temp - 273.15) * 10) / 10)) : Math.round((weather.temp - 273.15) * 10) / 10, ' ', scaleF ? '°F' : '°C', '\\n', \"humidity outside: \", weather.humidity, \" %\", '\\n']\n        })\n      }), _jsxs(View, {\n        style: [{\n          flex: 1,\n          alignItems: 'center',\n          marginLeft: 30,\n          width: '70%',\n          justifyContent: 'center'\n        }],\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 30,\n            fontWeight: '400',\n            fontSize: 30,\n            textAlign: 'center'\n          },\n          children: \"humidity inside:\"\n        }), _jsxs(Text, {\n          style: {\n            fontSize: 60,\n            fontWeight: '700',\n            textAlign: 'center'\n          },\n          children: [humidityInside, \" %\"]\n        }), _jsx(Text, {\n          style: {\n            fontSize: 26,\n            fontWeight: '400',\n            marginBottom: 10,\n            textAlign: 'center'\n          },\n          children: resultDescription.title\n        }), _jsx(Text, {\n          style: {\n            fontSize: 18,\n            fontWeight: '400',\n            textAlign: 'center'\n          },\n          children: resultDescription.description\n        })]\n      }), _jsx(Slider, {\n        minimumValue: 0,\n        maximumValue: 100,\n        step: 0.1,\n        style: {\n          width: 350,\n          top: -220,\n          right: -150,\n          transform: [{\n            rotate: '270deg'\n          }]\n        },\n        minimumTrackTintColor: \"#005803b5\",\n        maximumTrackTintColor: \"#e5c300f5\",\n        onValueChange: function onValueChange(value) {\n          return console.log(value);\n        },\n        value: humidityInside,\n        thumbTintColor: \"transparent\"\n      }), _jsx(TouchableOpacity, {\n        style: {\n          backgroundColor: '#220F80',\n          color: 'white',\n          marginBottom: 50,\n          height: 50,\n          justifyContent: 'center',\n          borderRadius: 4,\n          marginHorizontal: 40,\n          borderColor: '#3B25A8',\n          borderWidth: 1\n        },\n        onPress: function onPress() {\n          return navigation.navigate('Main');\n        },\n        children: _jsx(Text, {\n          style: {\n            color: 'white',\n            fontSize: 20,\n            fontWeight: '500',\n            alignSelf: 'center'\n          },\n          children: \"start again\"\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/tom/Documents/Dev/humidd/app/src/Result.jsx"],"names":["Image","SafeAreaView","Slider","useNavigation","Text","useContext","CalcContext","cToF","RESULT_DESCRIPTION","title","description","Result","navigation","humidityInside","weather","locationName","scaleF","resultDescription","backgroundColor","flex","height","alignSelf","marginTop","require","textAlign","fontSize","color","Math","round","temp","humidity","alignItems","marginLeft","width","justifyContent","fontWeight","marginBottom","top","right","transform","rotate","value","console","log","borderRadius","marginHorizontal","borderColor","borderWidth","navigate","styles","StyleSheet","create","container"],"mappings":";;;AACA,OAAOA,KAAP;AACA,SAASC,YAAT,QAA6B,gCAA7B;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,IAAP;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT;AACA,SAASC,IAAT;;;;AAEA,IAAMC,kBAAkB,GAAG;AACzB,KAAG;AACDC,IAAAA,KAAK,YADJ;AAEDC,IAAAA,WAAW;AAFV,GADsB;AAKzB,MAAI;AACFD,IAAAA,KAAK,qBADH;AAEFC,IAAAA,WAAW;AAFT,GALqB;AASzB,MAAI;AACFD,IAAAA,KAAK,YADH;AAEFC,IAAAA,WAAW;AAFT;AATqB,CAA3B;AAeA,eAAe,SAASC,MAAT,GAAkB;AAC/B,MAAMC,UAAU,GAAGT,aAAa,EAAhC;;AACA,oBACEE,UAAU,CAACC,WAAD,CADZ;AAAA,MAAQO,cAAR,eAAQA,cAAR;AAAA,MAAwBC,OAAxB,eAAwBA,OAAxB;AAAA,MAAiCC,YAAjC,eAAiCA,YAAjC;AAAA,MAA+CC,MAA/C,eAA+CA,MAA/C;;AAGA,MAAIC,iBAAJ;;AACA,MAAIJ,cAAc,GAAG,EAArB,EAAyB;AACvBI,IAAAA,iBAAiB,GAAGT,kBAAkB,CAAC,EAAD,CAAtC;AACD,GAFD,MAEO,IAAIK,cAAc,GAAG,EAArB,EAAyB;AAC9BI,IAAAA,iBAAiB,GAAGT,kBAAkB,CAAC,EAAD,CAAtC;AACD,GAFM,MAEA;AACLS,IAAAA,iBAAiB,GAAGT,kBAAkB,CAAC,CAAD,CAAtC;AACD;;AAED,SACE;AAAA,cACE,MAAC,YAAD;AAAc,MAAA,KAAK,EAAE;AAAEU,QAAAA,eAAe,EAAE,OAAnB;AAA4BC,QAAAA,IAAI,EAAE;AAAlC,OAArB;AAAA,iBAEE,KAAC,KAAD;AACE,QAAA,UAAU,EAAC,SADb;AAEE,QAAA,KAAK,EAAE;AACLC,UAAAA,MAAM,EAAE,EADH;AAELC,UAAAA,SAAS,EAAE,QAFN;AAGLC,UAAAA,SAAS,EAAE;AAHN,SAFT;AAOE,QAAA,MAAM,EAAEC,OAAO;AAPjB,QAFF,EAaE,KAAC,IAAD;AAAA,kBACE,MAAC,IAAD;AACE,UAAA,KAAK,EAAE;AACLC,YAAAA,SAAS,EAAE,QADN;AAELF,YAAAA,SAAS,EAAE,EAFN;AAGLG,YAAAA,QAAQ,EAAE,EAHL;AAILC,YAAAA,KAAK,EAAE;AAJF,WADT;AAAA,qBAQGX,YARH,EASG,IATH,EAUGD,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmBJ,WAVtB,EAWG,IAXH,mBAYgB,GAZhB,EAaGM,MAAM,GACHW,IAAI,CAACC,KAAL,CAAWrB,IAAI,CAACoB,IAAI,CAACC,KAAL,CAAW,CAACd,OAAO,CAACe,IAAR,GAAe,MAAhB,IAA0B,EAArC,IAA2C,EAA5C,CAAf,CADG,GAEHF,IAAI,CAACC,KAAL,CAAW,CAACd,OAAO,CAACe,IAAR,GAAe,MAAhB,IAA0B,EAArC,IAA2C,EAfjD,EAeqD,GAfrD,EAgBGb,MAAM,GAAG,IAAH,GAAU,IAhBnB,EAiBG,IAjBH,wBAkBqBF,OAAO,CAACgB,QAlB7B,QAkByC,IAlBzC;AAAA;AADF,QAbF,EAqCE,MAAC,IAAD;AACE,QAAA,KAAK,EAAE,CACL;AACEX,UAAAA,IAAI,EAAE,CADR;AAEEY,UAAAA,UAAU,EAAE,QAFd;AAGEC,UAAAA,UAAU,EAAE,EAHd;AAIEC,UAAAA,KAAK,EAAE,KAJT;AAKEC,UAAAA,cAAc,EAAE;AALlB,SADK,CADT;AAAA,mBAWE,KAAC,IAAD;AACE,UAAA,KAAK,EAAE;AACLT,YAAAA,QAAQ,EAAE,EADL;AAELU,YAAAA,UAAU,EAAE,KAFP;AAGLV,YAAAA,QAAQ,EAAE,EAHL;AAILD,YAAAA,SAAS,EAAE;AAJN,WADT;AAAA;AAAA,UAXF,EAqBE,MAAC,IAAD;AACE,UAAA,KAAK,EAAE;AAAEC,YAAAA,QAAQ,EAAE,EAAZ;AAAgBU,YAAAA,UAAU,EAAE,KAA5B;AAAmCX,YAAAA,SAAS,EAAE;AAA9C,WADT;AAAA,qBAGGX,cAHH;AAAA,UArBF,EA0BE,KAAC,IAAD;AACE,UAAA,KAAK,EAAE;AACLY,YAAAA,QAAQ,EAAE,EADL;AAELU,YAAAA,UAAU,EAAE,KAFP;AAGLC,YAAAA,YAAY,EAAE,EAHT;AAILZ,YAAAA,SAAS,EAAE;AAJN,WADT;AAAA,oBAQGP,iBAAiB,CAACR;AARrB,UA1BF,EAoCE,KAAC,IAAD;AACE,UAAA,KAAK,EAAE;AACLgB,YAAAA,QAAQ,EAAE,EADL;AAELU,YAAAA,UAAU,EAAE,KAFP;AAGLX,YAAAA,SAAS,EAAE;AAHN,WADT;AAAA,oBAOGP,iBAAiB,CAACP;AAPrB,UApCF;AAAA,QArCF,EAmFE,KAAC,MAAD;AACE,QAAA,YAAY,EAAE,CADhB;AAEE,QAAA,YAAY,EAAE,GAFhB;AAGE,QAAA,IAAI,EAAE,GAHR;AAIE,QAAA,KAAK,EAAE;AACLuB,UAAAA,KAAK,EAAE,GADF;AAELI,UAAAA,GAAG,EAAE,CAAC,GAFD;AAGLC,UAAAA,KAAK,EAAE,CAAC,GAHH;AAILC,UAAAA,SAAS,EAAE,CAAC;AAAEC,YAAAA,MAAM,EAAE;AAAV,WAAD;AAJN,SAJT;AAUE,QAAA,qBAAqB,EAAC,WAVxB;AAWE,QAAA,qBAAqB,EAAC,WAXxB;AAYE,QAAA,aAAa,EAAE,uBAACC,KAAD;AAAA,iBAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAX;AAAA,SAZjB;AAaE,QAAA,KAAK,EAAE5B,cAbT;AAcE,QAAA,cAAc,EAAC;AAdjB,QAnFF,EAqGE,KAAC,gBAAD;AACE,QAAA,KAAK,EAAE;AACLK,UAAAA,eAAe,EAAE,SADZ;AAELQ,UAAAA,KAAK,EAAE,OAFF;AAGLU,UAAAA,YAAY,EAAE,EAHT;AAILhB,UAAAA,MAAM,EAAE,EAJH;AAKLc,UAAAA,cAAc,EAAE,QALX;AAMLU,UAAAA,YAAY,EAAE,CANT;AAOLC,UAAAA,gBAAgB,EAAE,EAPb;AAQLC,UAAAA,WAAW,EAAE,SARR;AASLC,UAAAA,WAAW,EAAE;AATR,SADT;AAYE,QAAA,OAAO,EAAE;AAAA,iBAAMnC,UAAU,CAACoC,QAAX,CAAoB,MAApB,CAAN;AAAA,SAZX;AAAA,kBAcE,KAAC,IAAD;AACE,UAAA,KAAK,EAAE;AACLtB,YAAAA,KAAK,EAAE,OADF;AAELD,YAAAA,QAAQ,EAAE,EAFL;AAGLU,YAAAA,UAAU,EAAE,KAHP;AAILd,YAAAA,SAAS,EAAE;AAJN,WADT;AAAA;AAAA;AAdF,QArGF;AAAA;AADF,IADF;AAmID;AAED,IAAM4B,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTjC,IAAAA,IAAI,EAAE,CADG;AAETD,IAAAA,eAAe,EAAE,MAFR;AAGTa,IAAAA,UAAU,EAAE,QAHH;AAITG,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import { StyleSheet, View, TouchableOpacity } from 'react-native'\nimport Image from './components/Image'\nimport { SafeAreaView } from 'react-native-safe-area-context'\nimport Slider from '@react-native-community/slider'\nimport { useNavigation } from '@react-navigation/native'\nimport Text from './components/Text'\nimport { useContext } from 'react'\nimport { CalcContext } from './helpers'\nimport { cToF } from './helpers'\n\nconst RESULT_DESCRIPTION = {\n  0: {\n    title: `too dry!`,\n    description: `use humidifier`,\n  },\n  30: {\n    title: `perfect humidity!`,\n    description: ``,\n  },\n  60: {\n    title: `too wet!`,\n    description: `use air conditioner`,\n  },\n}\n\nexport default function Result() {\n  const navigation = useNavigation()\n  const { humidityInside, weather, locationName, scaleF } =\n    useContext(CalcContext)\n\n  let resultDescription\n  if (humidityInside > 60) {\n    resultDescription = RESULT_DESCRIPTION[60]\n  } else if (humidityInside > 30) {\n    resultDescription = RESULT_DESCRIPTION[30]\n  } else {\n    resultDescription = RESULT_DESCRIPTION[0]\n  }\n\n  return (\n    <>\n      <SafeAreaView style={{ backgroundColor: 'white', flex: 1 }}>\n        {/* image */}\n        <Image\n          resizeMode=\"contain\"\n          style={{\n            height: 50,\n            alignSelf: 'center',\n            marginTop: 20,\n          }}\n          source={require('../assets/logo_black.png')}\n        />\n\n        {/* computed for */}\n        <View>\n          <Text\n            style={{\n              textAlign: 'center',\n              marginTop: 40,\n              fontSize: 16,\n              color: 'gray',\n            }}\n          >\n            {locationName}\n            {'\\n'}\n            {weather.weather[0].description}\n            {'\\n'}\n            temp outside:{' '}\n            {scaleF\n              ? Math.round(cToF(Math.round((weather.temp - 273.15) * 10) / 10))\n              : Math.round((weather.temp - 273.15) * 10) / 10}{' '}\n            {scaleF ? '°F' : '°C'}\n            {'\\n'}\n            humidity outside: {weather.humidity} %{'\\n'}\n          </Text>\n        </View>\n\n        {/* slider */}\n        <View\n          style={[\n            {\n              flex: 1,\n              alignItems: 'center',\n              marginLeft: 30,\n              width: '70%',\n              justifyContent: 'center',\n            },\n          ]}\n        >\n          <Text\n            style={{\n              fontSize: 30,\n              fontWeight: '400',\n              fontSize: 30,\n              textAlign: 'center',\n            }}\n          >\n            humidity inside:\n          </Text>\n          <Text\n            style={{ fontSize: 60, fontWeight: '700', textAlign: 'center' }}\n          >\n            {humidityInside} %\n          </Text>\n          <Text\n            style={{\n              fontSize: 26,\n              fontWeight: '400',\n              marginBottom: 10,\n              textAlign: 'center',\n            }}\n          >\n            {resultDescription.title}\n          </Text>\n          <Text\n            style={{\n              fontSize: 18,\n              fontWeight: '400',\n              textAlign: 'center',\n            }}\n          >\n            {resultDescription.description}\n          </Text>\n        </View>\n        <Slider\n          minimumValue={0}\n          maximumValue={100}\n          step={0.1}\n          style={{\n            width: 350,\n            top: -220,\n            right: -150,\n            transform: [{ rotate: '270deg' }],\n          }}\n          minimumTrackTintColor=\"#005803b5\"\n          maximumTrackTintColor=\"#e5c300f5\"\n          onValueChange={(value) => console.log(value)}\n          value={humidityInside}\n          thumbTintColor=\"transparent\"\n        />\n\n        {/* button */}\n        <TouchableOpacity\n          style={{\n            backgroundColor: '#220F80',\n            color: 'white',\n            marginBottom: 50,\n            height: 50,\n            justifyContent: 'center',\n            borderRadius: 4,\n            marginHorizontal: 40,\n            borderColor: '#3B25A8',\n            borderWidth: 1,\n          }}\n          onPress={() => navigation.navigate('Main')}\n        >\n          <Text\n            style={{\n              color: 'white',\n              fontSize: 20,\n              fontWeight: '500',\n              alignSelf: 'center',\n            }}\n          >\n            start again\n          </Text>\n        </TouchableOpacity>\n      </SafeAreaView>\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n})\n"]},"metadata":{},"sourceType":"module"}