{"ast":null,"code":"import { useEffect, useRef, createContext } from 'react';\nexport var CalcContext = createContext();\nexport function useFirstRender() {\n  var firstRender = useRef(true);\n  useEffect(function () {\n    firstRender.current = false;\n  }, []);\n  return firstRender.current;\n}\nexport function computeHumidity(tIn, tOut, hOut) {\n  var satVarPIn = 6.122 * Math.exp(17.62 * tIn / (243.12 + tIn));\n  var satVarPOut = 6.122 * Math.exp(17.62 * tOut / (243.12 + tOut));\n  var result = (tIn + 273) * hOut * satVarPOut / ((tOut + 273) * satVarPIn);\n  return result > 99 ? 99 : result;\n}\nexport function cToF(celsius) {\n  return celsius * 9 / 5 + 32;\n}\nexport function fToC(fahrenheit) {\n  return (fahrenheit - 32) * 5 / 9;\n}","map":{"version":3,"sources":["/Users/tom/Documents/Dev/humidd/app/src/helpers/index.jsx"],"names":["useEffect","useRef","createContext","CalcContext","useFirstRender","firstRender","current","computeHumidity","tIn","tOut","hOut","satVarPIn","Math","exp","satVarPOut","result","cToF","celsius","fToC","fahrenheit"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,aAA5B,QAAiD,OAAjD;AAEA,OAAO,IAAMC,WAAW,GAAGD,aAAa,EAAjC;AAEP,OAAO,SAASE,cAAT,GAA0B;AAC/B,MAAMC,WAAW,GAAGJ,MAAM,CAAC,IAAD,CAA1B;AAEAD,EAAAA,SAAS,CAAC,YAAM;AACdK,IAAAA,WAAW,CAACC,OAAZ,GAAsB,KAAtB;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAOD,WAAW,CAACC,OAAnB;AACD;AAED,OAAO,SAASC,eAAT,CAAyBC,GAAzB,EAA8BC,IAA9B,EAAoCC,IAApC,EAA0C;AAC/C,MAAMC,SAAS,GAAG,QAAQC,IAAI,CAACC,GAAL,CAAU,QAAQL,GAAT,IAAiB,SAASA,GAA1B,CAAT,CAA1B;AACA,MAAMM,UAAU,GAAG,QAAQF,IAAI,CAACC,GAAL,CAAU,QAAQJ,IAAT,IAAkB,SAASA,IAA3B,CAAT,CAA3B;AACA,MAAMM,MAAM,GAAI,CAACP,GAAG,GAAG,GAAP,IAAcE,IAAd,GAAqBI,UAAtB,IAAqC,CAACL,IAAI,GAAG,GAAR,IAAeE,SAApD,CAAf;AACA,SAAOI,MAAM,GAAG,EAAT,GAAc,EAAd,GAAmBA,MAA1B;AACD;AAED,OAAO,SAASC,IAAT,CAAcC,OAAd,EAAuB;AAC5B,SAAQA,OAAO,GAAG,CAAX,GAAgB,CAAhB,GAAoB,EAA3B;AACD;AAED,OAAO,SAASC,IAAT,CAAcC,UAAd,EAA0B;AAC/B,SAAQ,CAACA,UAAU,GAAG,EAAd,IAAoB,CAArB,GAA0B,CAAjC;AACD","sourcesContent":["import { useEffect, useRef, createContext } from 'react'\n\nexport const CalcContext = createContext()\n\nexport function useFirstRender() {\n  const firstRender = useRef(true)\n\n  useEffect(() => {\n    firstRender.current = false\n  }, [])\n\n  return firstRender.current\n}\n\nexport function computeHumidity(tIn, tOut, hOut) {\n  const satVarPIn = 6.122 * Math.exp((17.62 * tIn) / (243.12 + tIn))\n  const satVarPOut = 6.122 * Math.exp((17.62 * tOut) / (243.12 + tOut))\n  const result = ((tIn + 273) * hOut * satVarPOut) / ((tOut + 273) * satVarPIn)\n  return result > 99 ? 99 : result\n}\n\nexport function cToF(celsius) {\n  return (celsius * 9) / 5 + 32\n}\n\nexport function fToC(fahrenheit) {\n  return ((fahrenheit - 32) * 5) / 9\n}\n"]},"metadata":{},"sourceType":"module"}